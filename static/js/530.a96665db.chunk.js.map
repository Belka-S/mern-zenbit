{"version":3,"file":"static/js/530.a96665db.chunk.js","mappings":"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","sources":["components/AuthForms/SignupForm.jsx","pages/SignupPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Fragment, useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport LinkRoute from 'components/AuthForms/AuthLinks/LinkRoute';\nimport SignBtn from './AuthBtns/SignBtn';\nimport IconBtn from './IconBtn/IconBtn';\nimport GoogleBtn from './AuthBtns/GoogleBtn';\nimport { registerThunk } from 'store/auth/authOperations';\nimport { signupSchema } from 'utils/validation';\nimport { Form, Field, FieldWrap } from 'components/AuthForms/AuthForms.styled';\nimport { ErrorMsg, Label, Tittle } from 'components/AuthForms/AuthForms.styled';\nimport { SuccessIcon, ErrorIcon } from 'components/AuthForms/AuthForms.styled';\n\nconst initialValues = { name: '', email: '', password: '' };\n\nconst SignupForm = ({ setIsVerify }) => {\n  const dispatch = useDispatch();\n  const [toggle, setToggle] = useState('password');\n\n  const isValid = ({ values, errors, key }) => {\n    const noValue = !values[key] && 'noValue';\n    const isError = errors[key] ? 'error' : 'success';\n    return noValue || isError;\n  };\n\n  const isDisabled = ({ errors, values }) => {\n    const isError = Object.keys(errors).length;\n    const noValue = Object.keys(values).some(key => !values[key]);\n    return noValue || isError;\n  };\n\n  const onSubmit = (values, actions) => {\n    dispatch(registerThunk(values))\n      .unwrap()\n      .then(pld => setIsVerify(!pld.result.user.verifiedEmail))\n      .catch(err => console.log(err));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={signupSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Tittle>\n            <h2>Sign Up</h2>\n          </Tittle>\n\n          {Object.keys(initialValues).map(key => (\n            <Fragment key={key}>\n              <Label>\n                {key.at(0).toUpperCase() + key.substring(1)}\n                <pre> </pre>\n                <ErrorMsg name={key} component=\"span\" />\n              </Label>\n\n              <FieldWrap>\n                <Field\n                  type={key === 'password' ? toggle : key}\n                  name={key}\n                  placeholder={key.at(0).toUpperCase() + key.substring(1)}\n                  validation={isValid({ values, errors, key })}\n                />\n\n                {key === 'password' && (\n                  <IconBtn toggle={toggle} setToggle={setToggle} />\n                )}\n                {values[key] && errors[key] && <ErrorIcon />}\n                {values[key] && !errors[key] && <SuccessIcon />}\n              </FieldWrap>\n            </Fragment>\n          ))}\n\n          <SignBtn disabled={isDisabled({ values, errors })}>Sign up</SignBtn>\n\n          <GoogleBtn />\n\n          <span className=\"toggler\">\n            Have an account? <LinkRoute to=\"/signin\">Log In</LinkRoute>\n          </span>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n  setIsVerify: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nimport AuthLayout from 'layouts/AuthLayout/AuthLayout';\nimport SignupForm from 'components/AuthForms/SignupForm';\nimport Modal from 'components/Modal/Modal';\nimport VerifyForm from 'components/AuthForms/VerifyForm';\n\nconst SignupPage = () => {\n  const [isVerify, setIsVerify] = useState(false);\n\n  return (\n    <AuthLayout>\n      <SignupForm setIsVerify={setIsVerify} />\n\n      {isVerify && (\n        <Modal onClick={() => setIsVerify(!isVerify)}>\n          <VerifyForm />\n        </Modal>\n      )}\n    </AuthLayout>\n  );\n};\n\nexport default SignupPage;\n"],"names":["initialValues","name","email","password","_ref","setIsVerify","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","isValid","_ref2","values","errors","key","noValue","isError","isDisabled","_ref3","Object","keys","length","some","_jsx","Formik","validationSchema","signupSchema","onSubmit","actions","registerThunk","unwrap","then","pld","result","user","verifiedEmail","catch","err","console","log","resetForm","children","_ref4","_jsxs","Form","Tittle","map","Fragment","Label","at","toUpperCase","substring","ErrorMsg","component","FieldWrap","Field","type","placeholder","validation","IconBtn","ErrorIcon","SuccessIcon","SignBtn","disabled","GoogleBtn","className","LinkRoute","to","isVerify","AuthLayout","SignupForm","Modal","onClick","VerifyForm"],"sourceRoot":""}