{"version":3,"file":"static/js/997.fb627220.chunk.js","mappings":"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","sources":["components/AuthForms/AuthBtns/AuthBtns.styled.jsx","components/AuthForms/AuthBtns/GoogleBtn.jsx","components/AuthForms/AuthBtns/SignBtn.jsx","components/AuthForms/AuthForms.styled.jsx","components/AuthForms/AuthLinks/Link.styled.jsx","components/AuthForms/AuthLinks/LinkRoute.jsx","components/AuthForms/IconBtn/IconBtn.styled.jsx","components/AuthForms/IconBtn/IconBtn.jsx","components/AuthForms/VerifyForm.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","layouts/AuthLayout/AuthLayout.styled.jsx","layouts/AuthLayout/AuthLayout.jsx","components/AuthForms/SignupForm.jsx","pages/SignupPage.jsx","utils/hooks/useItems.js","utils/constants/regExp.js","utils/validation/userSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  font-family: 'Merriweather', serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.37;\n\n  border: 1px solid;\n  border-radius: ${themes.radius.s};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n`;\n\nexport const SignButton = styled.button`\n  ${CommonStyles};\n\n  margin-top: 30px;\n\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.white};\n  background-color: ${themes.colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.hovered};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.accent};\n    background-color: ${themes.colors.accent};\n  }\n`;\n\nexport const IconLink = styled.a`\n  ${CommonStyles};\n\n  margin-top: 18px;\n  padding-inline: 10px;\n\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.black};\n  background-color: transparent;\n  transition: color 250ms, border-color 250ms;\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n  }\n\n  & div {\n    width: 100%;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & pre {\n    font-size: 12px;\n  }\n`;\n","import { FcGoogle } from 'react-icons/fc';\nimport { MdArrowForwardIos } from 'react-icons/md';\n\nimport { baseURL } from 'servises/baseURL';\nimport { IconLink } from './AuthBtns.styled';\n\nconst GoogleBtn = () => (\n  <IconLink href={`${baseURL}/auth/google`}>\n    <div>\n      <FcGoogle size=\"20px\" />\n      Sign in with Google\n      <MdArrowForwardIos size=\"16px\" />\n    </div>\n  </IconLink>\n);\n\nexport default GoogleBtn;\n","import PropTypes from 'prop-types';\n\nimport { SignButton } from './AuthBtns.styled';\n\nconst SignBtn = ({ onClick, disabled, children }) => {\n  return (\n    <SignButton onClick={onClick} type=\"submit\" disabled={disabled}>\n      {children}\n    </SignButton>\n  );\n};\n\nexport default SignBtn;\n\nSignButton.propTepes = {\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.oneOf(['img', 'png', 'svg']),\n  ]).isRequired,\n};\n","import styled, { css } from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage } from 'formik';\nimport { BsCheckCircle, BsExclamationCircle } from 'react-icons/bs';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  margin-top: 80px;\n  height: calc(100vh - 80px);\n  min-width: 550px;\n  padding: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  background-color: ${themes.colors.background};\n\n  & .toggler {\n    margin-top: 10px;\n    align-self: center;\n    font-family: 'Lato', sans-serif;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.57;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: baseline;\n\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.42;\n\n  & pre {\n    font-size: 10px;\n  }\n`;\n\nconst FieldStyles = css`\n  margin-bottom: 20px;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FieldWrap = styled.div`\n  ${FieldStyles}\n\n  margin-bottom: 20px;\n  position: relative;\n\n  &:last-of-type {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  ${FieldStyles}\n\n  height: 48px;\n  padding: 12px 20px 15px;\n  padding-left: ${({ name }) => name.toLowerCase().includes('pass') && '38px'};\n\n  font-size: 14px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 400;\n  line-height: 1.57;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: ${themes.radius.s};\n  outline: 0.5px solid transparent;\n  background-color: ${themes.colors.border};\n\n  transition: border-color 250ms linear, outline-color 250ms linear;\n\n  &::placeholder {\n    color: ${themes.colors.black};\n    opacity: 0.5;\n  }\n\n  border-color: ${({ validation }) => {\n    switch (validation) {\n      case 'noValue':\n        return themes.colors.border;\n      case validation:\n        return themes.colors[validation];\n      default:\n        break;\n    }\n  }};\n\n  &:hover,\n  &:focus {\n    border-color: ${({ validation }) => {\n      switch (validation) {\n        case validation:\n          return themes.colors[validation];\n        default:\n          break;\n      }\n    }};\n\n    outline-color: ${({ validation }) => {\n      switch (validation) {\n        case validation:\n          return themes.colors[validation];\n        default:\n          break;\n      }\n    }};\n  }\n`;\n\nexport const Tittle = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  & h2 {\n    margin: 0;\n\n    font-family: 'Merriweather', serif;\n    font-size: 28px;\n    line-height: 1.21;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  font-weight: 400;\n\n  color: ${themes.colors.error};\n`;\n\nconst IconStyles = css`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n`;\n\nexport const SuccessIcon = styled(BsCheckCircle)`\n  ${IconStyles};\n\n  color: ${themes.colors.success};\n`;\n\nexport const ErrorIcon = styled(BsExclamationCircle)`\n  ${IconStyles};\n\n  color: ${themes.colors.error};\n`;\n","import styled, { css } from 'styled-components';\nimport { Link as RouteLink } from 'react-router-dom';\n\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  margin-left: auto;\n\n  color: ${themes.colors.accent};\n  font-family: 'Lato', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.57;\n  transition: color 250ms;\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n  }\n`;\n\nexport const Link = styled(RouteLink)`\n  ${CommonStyles};\n`;\n\nexport const Btn = styled.button`\n  ${CommonStyles};\n\n  background-color: transparent;\n  border-color: transparent;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Link } from './Link.styled';\n\nconst LinkRoute = ({ to, fs, children }) => {\n  return (\n    <Link to={to} fs={fs}>\n      {children}\n    </Link>\n  );\n};\n\nexport default LinkRoute;\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  fs: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Button = styled.button`\n  width: fit-content;\n  position: absolute;\n  top: 50%;\n  left: 10px;\n\n  transform: translateY(-50%);\n\n  border-color: transparent;\n  background-color: transparent;\n  color: ${themes.colors.black};\n  transition: color 250ms;\n`;\n","import PropTypes from 'prop-types';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\n\nimport { Button } from './IconBtn.styled';\n\nconst IconBtn = ({ toggle, setToggle }) => {\n  const onClick = () => {\n    if (toggle === 'text') setToggle('password');\n    if (toggle === 'password') setToggle('text');\n  };\n\n  return (\n    <Button type=\"button\" onClick={onClick}>\n      {toggle === 'password' && <BsEye size=\"18px\" />}\n      {toggle === 'text' && <BsEyeSlash size=\"18px\" />}\n    </Button>\n  );\n};\n\nexport default IconBtn;\n\nIconBtn.propTypes = {\n  setToggle: PropTypes.func.isRequired,\n  toggle: PropTypes.string.isRequired,\n};\n","import { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport SignBtn from './AuthBtns/SignBtn';\nimport { useAuth } from 'utils/hooks';\nimport { verifySchema } from 'utils/validation';\nimport { refreshThunk, verifyThunk } from 'store/auth/authOperations';\nimport { Form, Field, FieldWrap } from 'components/AuthForms/AuthForms.styled';\nimport { Label, Tittle, ErrorMsg } from 'components/AuthForms/AuthForms.styled';\nimport { SuccessIcon, ErrorIcon } from 'components/AuthForms/AuthForms.styled';\n\nconst VerifyForm = () => {\n  const dispatch = useDispatch();\n  const { userEmail } = useAuth();\n\n  const isValid = ({ values, errors }) => {\n    const noValue = !Object.values(values)[0] && 'noValue';\n    const isError = Object.values(errors).length ? 'error' : 'success';\n    return noValue || isError;\n  };\n\n  const isDisabled = ({ errors }) => Object.keys(errors).length;\n\n  const onSubmit = (values, actions) => {\n    dispatch(verifyThunk(values))\n      .unwrap() // .then(pld =>  console.log(pld))\n      .catch(err => console.log(err))\n      .then(() => dispatch(refreshThunk()));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ verificationCode: '' }}\n      validationSchema={verifySchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Tittle>\n            <h2>Verify {userEmail}</h2>\n          </Tittle>\n\n          <Fragment>\n            <Label>\n              Code:\n              <pre> </pre>\n              <ErrorMsg name=\"verificationCode\" component=\"span\" />\n            </Label>\n            <FieldWrap>\n              <Field\n                type=\"text\"\n                name=\"verificationCode\"\n                placeholder=\"Code\"\n                validation={isValid({ values, errors })}\n              />\n\n              {isValid({ values, errors }) === 'error' && <ErrorIcon />}\n              {isValid({ values, errors }) === 'success' && <SuccessIcon />}\n            </FieldWrap>\n          </Fragment>\n\n          <SignBtn disabled={isDisabled({ errors })}>Submit</SignBtn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VerifyForm;\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n\n  background-color: ${themes.colors.backdrop};\n  backdrop-filter: blur(5px);\n\n  & > div {\n    position: absolute;\n    top: 50%;\n    right: 0;\n\n    transform: translateY(-50%);\n\n    background-color: transparent;\n    box-shadow: ${themes.shadows.modal};\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ onClick, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      e.key === 'Escape' && onClick();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClick]);\n\n  const handleBackdropClick = e => e.target === e.currentTarget && onClick();\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import styled from 'styled-components';\n\n// import { themes } from 'styles/themes';\nimport authBackground from 'assets/img/authBackground.jpg';\n\nexport const AuthContainer = styled.div`\n  display: flex;\n\n  & .back {\n    width: 100%;\n    background-image: url(${authBackground});\n    background-size: cover;\n    background-position: center;\n  }\n`;\n","import { AuthContainer } from './AuthLayout.styled';\n\nconst AuthLayout = ({ children }) => {\n  return (\n    <AuthContainer>\n      <div className=\"back\"></div>\n      {children}\n    </AuthContainer>\n  );\n};\n\nexport default AuthLayout;\n","import PropTypes from 'prop-types';\nimport { Fragment, useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport LinkRoute from 'components/AuthForms/AuthLinks/LinkRoute';\nimport SignBtn from './AuthBtns/SignBtn';\nimport IconBtn from './IconBtn/IconBtn';\nimport GoogleBtn from './AuthBtns/GoogleBtn';\nimport { registerThunk } from 'store/auth/authOperations';\nimport { signupSchema } from 'utils/validation';\nimport { Form, Field, FieldWrap } from 'components/AuthForms/AuthForms.styled';\nimport { ErrorMsg, Label, Tittle } from 'components/AuthForms/AuthForms.styled';\nimport { SuccessIcon, ErrorIcon } from 'components/AuthForms/AuthForms.styled';\n\nconst initialValues = { name: '', email: '', password: '' };\n\nconst SignupForm = ({ setIsVerify }) => {\n  const dispatch = useDispatch();\n  const [toggle, setToggle] = useState('password');\n\n  const isValid = ({ values, errors, key }) => {\n    const noValue = !values[key] && 'noValue';\n    const isError = errors[key] ? 'error' : 'success';\n    return noValue || isError;\n  };\n\n  const isDisabled = ({ errors, values }) => {\n    const isError = Object.keys(errors).length;\n    const noValue = Object.keys(values).some(key => !values[key]);\n    return noValue || isError;\n  };\n\n  const onSubmit = (values, actions) => {\n    dispatch(registerThunk(values))\n      .unwrap()\n      .then(pld => setIsVerify(!pld.result.user.verifiedEmail))\n      .catch(err => console.log(err));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={signupSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Tittle>\n            <h2>Sign Up</h2>\n          </Tittle>\n\n          {Object.keys(initialValues).map(key => (\n            <Fragment key={key}>\n              <Label>\n                {key.at(0).toUpperCase() + key.substring(1)}\n                <pre> </pre>\n                <ErrorMsg name={key} component=\"span\" />\n              </Label>\n\n              <FieldWrap>\n                <Field\n                  type={key === 'password' ? toggle : key}\n                  name={key}\n                  placeholder={key.at(0).toUpperCase() + key.substring(1)}\n                  validation={isValid({ values, errors, key })}\n                />\n\n                {key === 'password' && (\n                  <IconBtn toggle={toggle} setToggle={setToggle} />\n                )}\n                {values[key] && errors[key] && <ErrorIcon />}\n                {values[key] && !errors[key] && <SuccessIcon />}\n              </FieldWrap>\n            </Fragment>\n          ))}\n\n          <SignBtn disabled={isDisabled({ values, errors })}>Sign up</SignBtn>\n\n          <GoogleBtn />\n\n          <span className=\"toggler\">\n            Have an account? <LinkRoute to=\"/signin\">Log In</LinkRoute>\n          </span>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n  setIsVerify: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nimport AuthLayout from 'layouts/AuthLayout/AuthLayout';\nimport SignupForm from 'components/AuthForms/SignupForm';\nimport Modal from 'components/Modal/Modal';\nimport VerifyForm from 'components/AuthForms/VerifyForm';\n\nconst SignupPage = () => {\n  const [isVerify, setIsVerify] = useState(false);\n\n  return (\n    <AuthLayout>\n      <SignupForm setIsVerify={setIsVerify} />\n\n      {isVerify && (\n        <Modal onClick={() => setIsVerify(!isVerify)}>\n          <VerifyForm />\n        </Modal>\n      )}\n    </AuthLayout>\n  );\n};\n\nexport default SignupPage;\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useItems = () => {\n  const items = useSelector(selectors.selectItems);\n  const filterValue = useSelector(selectors.selectFilterValue);\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { items, filterValue, error, isLoading };\n};\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n","import * as Yup from 'yup';\n\nimport { NAME, EMAIL } from 'utils/constants';\n\nconst name = Yup.string()\n  .min(4, 'is too short')\n  .matches(NAME.regExp, NAME.msg)\n  .required('is required');\nconst email = Yup.string()\n  .matches(EMAIL.regExp, EMAIL.msg)\n  .required('is required');\nconst password = Yup.string().min(6, 'is too short').required('is required');\nconst code = Yup.number().required('is required').typeError('must be a number');\n\nexport const signupSchema = Yup.object().shape({ name, email, password });\nexport const signinSchema = Yup.object().shape({ email, password });\nexport const verifySchema = Yup.object().shape({ verificationCode: code });\nexport const forgotSchema = Yup.object().shape({ email });\nexport const resetSchema = Yup.object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([Yup.ref('newPass')], 'must match'),\n});\n"],"names":["CommonStyles","css","_templateObject","_taggedTemplateLiteral","themes","radius","s","SignButton","styled","button","_templateObject2","colors","accent","white","hovered","border","IconLink","a","_templateObject3","black","_jsx","href","concat","baseURL","children","_jsxs","FcGoogle","size","MdArrowForwardIos","_ref","onClick","disabled","type","propTepes","PropTypes","isRequired","Form","FormikForm","background","Label","label","FieldStyles","FieldWrap","div","_templateObject4","Field","FormikField","_templateObject5","name","toLowerCase","includes","_ref2","validation","_ref3","_ref4","Tittle","_templateObject6","ErrorMsg","ErrorMessage","_templateObject7","error","IconStyles","_templateObject8","SuccessIcon","BsCheckCircle","_templateObject9","success","ErrorIcon","BsExclamationCircle","_templateObject10","Link","RouteLink","Btn","to","fs","propTypes","Button","toggle","setToggle","BsEye","BsEyeSlash","dispatch","useDispatch","userEmail","useAuth","isValid","values","errors","noValue","Object","isError","length","isDisabled","keys","Formik","initialValues","verificationCode","validationSchema","verifySchema","onSubmit","actions","verifyThunk","unwrap","catch","err","console","log","then","refreshThunk","resetForm","Fragment","component","placeholder","SignBtn","Backdrop","backdrop","shadows","modal","modalRoot","document","querySelector","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","createPortal","target","currentTarget","AuthContainer","authBackground","className","email","password","setIsVerify","_useState","useState","_useState2","_slicedToArray","some","signupSchema","registerThunk","pld","result","user","verifiedEmail","map","at","toUpperCase","substring","IconBtn","GoogleBtn","LinkRoute","isVerify","AuthLayout","SignupForm","Modal","VerifyForm","useItems","items","useSelector","selectors","filterValue","isLoading","NAME","EMAIL","Yup","min","matches","required","code","typeError","shape","signinSchema","forgotSchema","resetSchema","newPass","confirmPass","oneOf"],"sourceRoot":""}